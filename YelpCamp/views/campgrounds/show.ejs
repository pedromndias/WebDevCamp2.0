<% layout("layouts/boilerplate") %>
    <!-- In this page we display some information about a specific campground -->

<!-- Let's import the css for the starability ratings -->
<link rel="stylesheet" href="/stylesheets/stars.css">

<div class="row">
    <div class="col-6">
        <div id="campgroundCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <!-- For the images we need to get the url (Cloudinary) for each image to display it -->
                <% campground.images.forEach((img, i) => { %> 
                <!-- For the image of index 0 in the images array we will add the class of active: -->
                <div class="carousel-item <%= i === 0 ? "active" : ""%> ">
                    <img src="<%= img.url %>" class="d-block w-100" alt="...">
                </div>
                <% }) %>
            </div>
            <!-- Let's only display the controls ( "<" and ">" ) if there is more than 1 image: -->
            <% if(campground.images.length > 1) { %> 
            <a class="carousel-control-prev" href="#campgroundCarousel" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#campgroundCarousel" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
            <% } %>
        </div>
        <div class="card mb-3">
            <div class="card-body">
                <h5 class="card-title"><%= campground.title %></h5>
                <p class="card-text"><%= campground.description %></p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item text-muted"><%= campground.location %></li>
                <li class="list-group-item">Submitted by <%= campground.author.username %></li>
                <li class="list-group-item">$<%= campground.price %>/night</li>
            </ul>
            <!-- If a logged in user did not create a campground then "Edit" and "Delete" should not be available. -->
            <!-- We code it like "If currentUser exists and is equal to campground.author:" -->
            <% if(currentUser && campground.author.equals(currentUser.id)) { %> 
            <div class="card-body">
                <a class="card-link btn btn-info" href="/campgrounds/<%= campground._id %>/edit">Edit</a>
                <form class="d-inline" action="/campgrounds/<%= campground._id %>?_method=DELETE" method="POST">
                    <button class="btn btn-danger">Delete</button>
                </form>
            </div>
            <% } %> 
            <div class="card-footer text-muted">
                <a href="/campgrounds">All Campgrounds</a>
            </div>
        </div>
    </div>
    <div class="col-6">
        <!-- Let's render a map with the Mapbox GL JS library. id "map" -->
        <div id="map"></div>

        <!-- The next form is to add a review to a specific campground. Only logged
             in user should view it. So we check if there's a currentUser or not: -->
        <% if(currentUser) { %> 
        <h2>Leave a Review</h2>
        <form action="/campgrounds/<%=campground._id%>/reviews" method="POST" class="mb-3 validated-form" novalidate>
            <!-- <div class="mb-3">
                <label class="form-label" for="rating">Rating</label>
                <input class="form-range" type="range" min="1" max="5" name="review[rating]" id="rating">
            </div> -->
            <!-- The next code is a Star Rating Form from Starability project: -->
            <div class="mb-3">
                <fieldset class="starability-basic">
                    <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
                    <input type="radio" id="first-rate1" name="review[rating]" value="1" />
                    <label for="first-rate1" title="Terrible">1 star</label>
                    <input type="radio" id="first-rate2" name="review[rating]" value="2" />
                    <label for="first-rate2" title="Not good">2 stars</label>
                    <input type="radio" id="first-rate3" name="review[rating]" value="3" />
                    <label for="first-rate3" title="Average">3 stars</label>
                    <input type="radio" id="first-rate4" name="review[rating]" value="4" />
                    <label for="first-rate4" title="Very good">4 stars</label>
                    <input type="radio" id="first-rate5" name="review[rating]" value="5" />
                    <label for="first-rate5" title="Amazing">5 stars</label>
                </fieldset>
            </div>

            <div class="mb-3">
                <label class="form-label" for="body">Review Text</label>
                <textarea class="form-control" name="review[body]" id="body" cols="30" rows="3" required></textarea>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <button class="btn btn-success">Submit</button>
        </form>
        <% } %> 
        <!-- Now we will display each of the reviews that were created for a specific campground: -->
        <% for (let review of campground.reviews) { %>
        <div class="card mb-3">
            <div class="card-body">
                <!-- Display the author of the review: -->
                <h5 class="card-title"><%= review.author.username %></h5>
                <!-- Display the rating of the review using starability rating project-->
                <p class="starability-result" data-rating="<%= review.rating %>">
                    Rated: <%= review.rating %> stars
                </p>
                <!-- <h5 class="card-subtitle mb-2 text-muted">By <%= review.author.username %></h5> -->
                <!-- And display the review itself: -->
                <p class="card-text">Review: <%= review.body %></p>
                <!-- The next form deletes a specific review -->
                <!-- Only the owner of the review should be able to delete it: -->
                <% if(currentUser && review.author.equals(currentUser.id)) { %> 
                <form action="/campgrounds/<%= campground._id %>/reviews/<%= review._id %>?_method=DELETE" method="POST">
                    <button class="btn btn-sm btn-danger">Delete</button>
                </form>
                <% } %> 
            </div>
        </div> 
        <% } %>
    </div>
</div>

<!-- Make a script to include our Map Token -->
<script>
    const mapToken = "<%-process.env.MAPBOX_TOKEN%>";
    // And we also create a campground variable to access it (it has to be a string):
    const campground = <%-JSON.stringify(campground)%> // Very annoying error from VSCode formating because it can't read ejs inside a script.
</script>
<!-- The next script includes the map object enabling to render a map. It will use the mapToken created before -->
<script src="/javascripts/showPageMap.js"></script>